@model TaskManagement.WebApp.ViewModels.TaskDetailsViewModel

@{
    Layout = "_Layout";
    ViewBag.Titulo = "Detalhes da Tarefa";
}

<link rel="stylesheet" href="~/css/task-details.css" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/js/graph.js" defer></script>


<div class="page-header">
    <h1 class="page-title">
        Detalhes da Tarefa "@Model.Title"
    </h1>
</div>

<div class="grid-container">
    <div style="grid-column: 1 / 3; grid-row: 1;">
        <div class="info-box">
            <label>Título:</label>
            <span>@Model.Title</span>
        </div>
    </div>

    <div class="task-items" style="grid-column: 3 / 5; grid-row: 1 / 3;">
        <h4>Itens da Tarefa</h4>

        @foreach (var item in Model.Items)
        {
            <div class="task-item">
                <span class="@(item.IsCompleted ? "text-decoration-line-through" : "")">
                    @item.Title
                </span>

                <div class="task-actions">
                    <form asp-action="ConcluirItem" asp-controller="Tasks" asp-route-id="@Model.Id" asp-route-itemId="@item.Id" method="post">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-sm @(item.IsCompleted ? "btn-outline-success" : "btn-outline-secondary")" title="@(item.IsCompleted ? "Desfazer" : "Concluir")">
                            <i class="bi @(item.IsCompleted ? "bi-check-circle-fill" : "bi-circle")"></i>
                        </button>
                    </form>

                    <form asp-action="ExcluirItem" asp-controller="Tasks"
                          asp-route-id="@Model.Id" asp-route-itemId="@item.Id" method="post">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-sm btn-outline-danger" title="Excluir Item"
                                onclick="return confirm('Deseja realmente excluir este item?')">
                            <i class="bi bi-trash"></i>
                        </button>
                    </form>
                </div>
            </div>
        }
    </div>

    <div style="grid-column: 1; grid-row: 2;">
        <div class="info-box">
            <label>Status:</label>
            <span class="status-box @(Model.IsCompleted ? "status-completa" : "status-pendente")">
                @(Model.IsCompleted ? "Completa" : "Pendente")
            </span>
        </div>

        <div class="info-box">
            <label>Data de Criação:</label>
            <span>@Model.CreationDate.ToString("g")</span>
        </div>

        <div class="info-box" style="margin-top: 15px;">
            <label>Data de Conclusão:</label>
            <span>
                @(Model.CompletionDate?.ToString("g") ?? "Não concluída")
            </span>
        </div>
    </div>


    <div style="grid-column: 2; grid-row: 2;">
        <div class="info-box progress-box">
            <label>Progresso:</label>
            <canvas id="donutChart" width="160" height="160" data-percentage="@Model.CompletionPercentage.ToString("0")"></canvas>
        </div>
    </div>
</div>

<div class="footer-separator"></div>

<div class="task-footer">
    <a href="/tasks" class="btn btn-secondary">Voltar para a listagem</a>

    <div class="task-actions">
        <a href="@Url.Action("AdicionarItem", "Tasks", new { id = Model.Id })" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Adicionar Item
        </a>
        <a href="@Url.Action("Editar", "Tasks", new { id = Model.Id })" class="btn btn-warning">
            <i class="bi bi-pencil"></i> Editar Tarefa
        </a>
    </div>
</div>
